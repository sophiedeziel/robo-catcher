#!/usr/bin/env ruby
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install --without development test')

  # puts "\n== Copying sample files =="
  # unless File.exist?('config/database.yml')
  #   cp 'config/database.yml.sample', 'config/database.yml'
  # end

  puts "\n== Symlinking nginx config =="
  system! 'rm /etc/nginx/nginx.conf'
  system! 'ln -s config/nginx.conf /etc/nginx/nginx.conf'

  puts "\n== Preparing key =="
  system! 'echo \'4fcefc7d0389fde80e768db1ffa66961\' >> config/master.key' unless File.exist?('config/master.key')

  puts "\n== Preparing database =="
  system! 'bin/rails db:setup RAILS_ENV=production'

  puts "\n== Preparing assets =="
  system! 'bin/rails assets:precompile RAILS_ENV=production'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear RAILS_ENV=production'

  puts "\n== Creating the systemd service =="
  system! 'sudo systemctl link /home/pi/robo-catcher/config/puma.service'
  system! 'sudo systemctl daemon-reload'
  system! 'sudo systemctl enable puma.service'
  system! 'sudo systemctl start puma.service'
end
