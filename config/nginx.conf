events {
  worker_connections 1024;
}

http {
  upstream rails_app {
     server localhost:3000;
  }

  server {
     server_name trash.local;

     # define the public application root
     root   /home/pi/robo-catcher;
     index  index.html;

     # define where Nginx should write its logs
     access_log /home/pi/robo-catcher/log/nginx.access.log;
     error_log /home/pi/robo-catcher/log/nginx.error.log;

     # deny requests for files that should never be accessed
     location ~ /\. {
        deny all;
     }
     location ~* ^.+\.(rb|log)$ {
        deny all;
     }

     location = /lastsnap.jpg {
       root  /var/lib/motion;
     }

     # serve static (compiled) assets directly if they exist (for rails production)
     location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
        try_files $uri @rails;
        access_log off;
        gzip_static on;
        # to serve pre-gzipped version
        expires max;
        add_header Cache-Control public;

        add_header Last-Modified "";
        add_header ETag "";
        break;
     }

     # send non-static file requests to the app server
     location / {
        try_files $uri @rails;
     }

     location @rails {
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://rails_app;
     }

     error_page 502 /502.html;
     location = /502.html {
       root  /home/pi/robo-catcher/public;
     }
  }
}
